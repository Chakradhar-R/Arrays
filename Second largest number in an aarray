// Java program to find second largest 
// element in an array 
import java.io.*; 

public class Main { 

// Function to print the second largest elements 
static void print2largest(int arr[], int arr_size) 
{ 
	int i, first, second; 

	// There should be atleast two elements 
	if (arr_size < 2) 
	{ 
		System.out.printf(" Invalid Input "); 
		return; 
	} 

	int largest = second = Integer.MIN_VALUE; 

	// Find the largest element 
	for(i = 0; i < arr_size; i++) 
	{ 
		largest = Math.max(largest, arr[i]); 
	} 

	// Find the second largest element 
	for(i = 0; i < arr_size; i++) 
	{ 
		if (arr[i] != largest) 
			second = Math.max(second, arr[i]); 
	} 
	if (second == Integer.MIN_VALUE) 
		System.out.printf("There is no second " + 
						"largest element\n"); 
	else
		System.out.printf("The second largest " + 
						"element is %d\n", second); 
} 

// Driver code 
public static void main(String[] args) 
{ 
	int arr[] = { 12, 35, 1, 10, 34, 1 }; 
	int n = arr.length; 
	
	print2largest(arr, n); 
} 
} 
----------
second approach:

import java.util.Arrays;
public class LargestNumberSample {
   public static void main(String args[]){
      int array[] = {10, 20, 25, 63, 96, 57};
      int size = array.length;
      Arrays.sort(array);
      System.out.println("sorted Array ::"+Arrays.toString(array));
      int res = array[size-2];
      System.out.println("2nd largest element is ::"+res);
   }
}
----------------
Second largest : 34

Complexity Analysis:

Time Complexity: O(n). 
Two traversals of the array are needed.
Auxiliary space: O(1). 
As no extra space is required.
